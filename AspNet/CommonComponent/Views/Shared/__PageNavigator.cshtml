@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *,DreamRecorder.Sayings.TagHelperProvider
@addTagHelper *,DreamRecorder.ToolBox.AspNet.CommonComponent
@using System
@using System.Collections
@using System.Collections.Generic
@using System.Linq
@model DreamRecorder.ToolBox.AspNet.CommonComponent.Models.PageNavigationModel
@{
    Model.RouteValues ??= new Dictionary <string , string> ( );

    if ( Model.PageCount == 0 )
    {
        Model.PageCount = 9;
    }

    if ( string.IsNullOrEmpty ( Model.Controller ) )
    {
        Model.Controller = ViewContext.RouteData.Values [ "controller" ]?.ToString ( );
    }

    if ( string.IsNullOrEmpty ( Model.Action ) )
    {
        Model.Action = ViewContext.RouteData.Values [ "action" ]?.ToString ( );
    }

    Model.RouteValues.TryAdd ( "controller" ,    Model.Controller );
    Model.RouteValues.TryAdd ( "action" ,        Model.Action );
    Model.RouteValues.TryAdd ( "acquiredCount" , Model.ItemPerPage.ToString ( ) );

    int currentPage;
    int left  = Math.Max ( 1 , Model.CurrentPage                   - ( Model.PageCount / 2 ) );
    int right = Math.Min ( Model.LastPage , left + Model.PageCount - 1 );
    left = Math.Max ( 1 , right - Model.PageCount + 1 );
}

<nav aria-label="Page Navigation">
    <ul class="pagination pagination-sm justify-content-center">
        @{
            if ( Model.CurrentPage > 1 )
            {
                <li class="page-item">
                    @{
                        Model.RouteValues [ "pageIndex" ] = $"{Model.CurrentPage - 1}";
                    }
                    <a class="page-link" aria-label="Previous" asp-all-route-data="@( Model.RouteValues )">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            for ( currentPage = left ; currentPage < Model.CurrentPage ; currentPage++ )
            {
                <li class="page-item">
                    @{
                        Model.RouteValues [ "pageIndex" ] = $"{currentPage}";
                    }
                    <a class="page-link" asp-all-route-data="@( Model.RouteValues )">@( currentPage )</a>
                </li>
            }

            <li class="page-item active" aria-current="page">
                <a class="page-link" href="#">
                    @( Model.CurrentPage )
                </a>
            </li>
            for ( currentPage++ ; currentPage <= right ; currentPage++ )
            {
                <li class="page-item">
                    @{
                        Model.RouteValues [ "pageIndex" ] = $"{currentPage}";
                    }
                    <a class="page-link" asp-all-route-data="@( Model.RouteValues )">@( currentPage )</a>
                </li>
            }

            if ( Model.CurrentPage < Model.LastPage )
            {
                <li class="page-item">
                    @{
                        Model.RouteValues [ "pageIndex" ] = $"{Model.CurrentPage + 1}";
                    }
                    <a class="page-link" aria-label="Next" asp-all-route-data="@( Model.RouteValues )">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        }
    </ul>
</nav>